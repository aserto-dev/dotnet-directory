// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: aserto/directory/reader/v2/reader.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Aserto.Directory.Reader.V2 {
  public static partial class Reader
  {
    static readonly string __ServiceName = "aserto.directory.reader.v2.Reader";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetObjectTypeRequest> __Marshaller_aserto_directory_reader_v2_GetObjectTypeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetObjectTypeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetObjectTypeResponse> __Marshaller_aserto_directory_reader_v2_GetObjectTypeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetObjectTypeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetObjectTypesRequest> __Marshaller_aserto_directory_reader_v2_GetObjectTypesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetObjectTypesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetObjectTypesResponse> __Marshaller_aserto_directory_reader_v2_GetObjectTypesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetObjectTypesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetRelationTypeRequest> __Marshaller_aserto_directory_reader_v2_GetRelationTypeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetRelationTypeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetRelationTypeResponse> __Marshaller_aserto_directory_reader_v2_GetRelationTypeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetRelationTypeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetRelationTypesRequest> __Marshaller_aserto_directory_reader_v2_GetRelationTypesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetRelationTypesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetRelationTypesResponse> __Marshaller_aserto_directory_reader_v2_GetRelationTypesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetRelationTypesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetPermissionRequest> __Marshaller_aserto_directory_reader_v2_GetPermissionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetPermissionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetPermissionResponse> __Marshaller_aserto_directory_reader_v2_GetPermissionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetPermissionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetPermissionsRequest> __Marshaller_aserto_directory_reader_v2_GetPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetPermissionsResponse> __Marshaller_aserto_directory_reader_v2_GetPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetObjectRequest> __Marshaller_aserto_directory_reader_v2_GetObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetObjectResponse> __Marshaller_aserto_directory_reader_v2_GetObjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetObjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetObjectManyRequest> __Marshaller_aserto_directory_reader_v2_GetObjectManyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetObjectManyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetObjectManyResponse> __Marshaller_aserto_directory_reader_v2_GetObjectManyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetObjectManyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetObjectsRequest> __Marshaller_aserto_directory_reader_v2_GetObjectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetObjectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetObjectsResponse> __Marshaller_aserto_directory_reader_v2_GetObjectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetObjectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetRelationRequest> __Marshaller_aserto_directory_reader_v2_GetRelationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetRelationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetRelationResponse> __Marshaller_aserto_directory_reader_v2_GetRelationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetRelationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetRelationsRequest> __Marshaller_aserto_directory_reader_v2_GetRelationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetRelationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetRelationsResponse> __Marshaller_aserto_directory_reader_v2_GetRelationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetRelationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.CheckPermissionRequest> __Marshaller_aserto_directory_reader_v2_CheckPermissionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.CheckPermissionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.CheckPermissionResponse> __Marshaller_aserto_directory_reader_v2_CheckPermissionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.CheckPermissionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.CheckRelationRequest> __Marshaller_aserto_directory_reader_v2_CheckRelationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.CheckRelationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.CheckRelationResponse> __Marshaller_aserto_directory_reader_v2_CheckRelationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.CheckRelationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetGraphRequest> __Marshaller_aserto_directory_reader_v2_GetGraphRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetGraphRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aserto.Directory.Reader.V2.GetGraphResponse> __Marshaller_aserto_directory_reader_v2_GetGraphResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aserto.Directory.Reader.V2.GetGraphResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetObjectTypeRequest, global::Aserto.Directory.Reader.V2.GetObjectTypeResponse> __Method_GetObjectType = new grpc::Method<global::Aserto.Directory.Reader.V2.GetObjectTypeRequest, global::Aserto.Directory.Reader.V2.GetObjectTypeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetObjectType",
        __Marshaller_aserto_directory_reader_v2_GetObjectTypeRequest,
        __Marshaller_aserto_directory_reader_v2_GetObjectTypeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetObjectTypesRequest, global::Aserto.Directory.Reader.V2.GetObjectTypesResponse> __Method_GetObjectTypes = new grpc::Method<global::Aserto.Directory.Reader.V2.GetObjectTypesRequest, global::Aserto.Directory.Reader.V2.GetObjectTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetObjectTypes",
        __Marshaller_aserto_directory_reader_v2_GetObjectTypesRequest,
        __Marshaller_aserto_directory_reader_v2_GetObjectTypesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetRelationTypeRequest, global::Aserto.Directory.Reader.V2.GetRelationTypeResponse> __Method_GetRelationType = new grpc::Method<global::Aserto.Directory.Reader.V2.GetRelationTypeRequest, global::Aserto.Directory.Reader.V2.GetRelationTypeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRelationType",
        __Marshaller_aserto_directory_reader_v2_GetRelationTypeRequest,
        __Marshaller_aserto_directory_reader_v2_GetRelationTypeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetRelationTypesRequest, global::Aserto.Directory.Reader.V2.GetRelationTypesResponse> __Method_GetRelationTypes = new grpc::Method<global::Aserto.Directory.Reader.V2.GetRelationTypesRequest, global::Aserto.Directory.Reader.V2.GetRelationTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRelationTypes",
        __Marshaller_aserto_directory_reader_v2_GetRelationTypesRequest,
        __Marshaller_aserto_directory_reader_v2_GetRelationTypesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetPermissionRequest, global::Aserto.Directory.Reader.V2.GetPermissionResponse> __Method_GetPermission = new grpc::Method<global::Aserto.Directory.Reader.V2.GetPermissionRequest, global::Aserto.Directory.Reader.V2.GetPermissionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPermission",
        __Marshaller_aserto_directory_reader_v2_GetPermissionRequest,
        __Marshaller_aserto_directory_reader_v2_GetPermissionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetPermissionsRequest, global::Aserto.Directory.Reader.V2.GetPermissionsResponse> __Method_GetPermissions = new grpc::Method<global::Aserto.Directory.Reader.V2.GetPermissionsRequest, global::Aserto.Directory.Reader.V2.GetPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPermissions",
        __Marshaller_aserto_directory_reader_v2_GetPermissionsRequest,
        __Marshaller_aserto_directory_reader_v2_GetPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetObjectRequest, global::Aserto.Directory.Reader.V2.GetObjectResponse> __Method_GetObject = new grpc::Method<global::Aserto.Directory.Reader.V2.GetObjectRequest, global::Aserto.Directory.Reader.V2.GetObjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetObject",
        __Marshaller_aserto_directory_reader_v2_GetObjectRequest,
        __Marshaller_aserto_directory_reader_v2_GetObjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetObjectManyRequest, global::Aserto.Directory.Reader.V2.GetObjectManyResponse> __Method_GetObjectMany = new grpc::Method<global::Aserto.Directory.Reader.V2.GetObjectManyRequest, global::Aserto.Directory.Reader.V2.GetObjectManyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetObjectMany",
        __Marshaller_aserto_directory_reader_v2_GetObjectManyRequest,
        __Marshaller_aserto_directory_reader_v2_GetObjectManyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetObjectsRequest, global::Aserto.Directory.Reader.V2.GetObjectsResponse> __Method_GetObjects = new grpc::Method<global::Aserto.Directory.Reader.V2.GetObjectsRequest, global::Aserto.Directory.Reader.V2.GetObjectsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetObjects",
        __Marshaller_aserto_directory_reader_v2_GetObjectsRequest,
        __Marshaller_aserto_directory_reader_v2_GetObjectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetRelationRequest, global::Aserto.Directory.Reader.V2.GetRelationResponse> __Method_GetRelation = new grpc::Method<global::Aserto.Directory.Reader.V2.GetRelationRequest, global::Aserto.Directory.Reader.V2.GetRelationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRelation",
        __Marshaller_aserto_directory_reader_v2_GetRelationRequest,
        __Marshaller_aserto_directory_reader_v2_GetRelationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetRelationsRequest, global::Aserto.Directory.Reader.V2.GetRelationsResponse> __Method_GetRelations = new grpc::Method<global::Aserto.Directory.Reader.V2.GetRelationsRequest, global::Aserto.Directory.Reader.V2.GetRelationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRelations",
        __Marshaller_aserto_directory_reader_v2_GetRelationsRequest,
        __Marshaller_aserto_directory_reader_v2_GetRelationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.CheckPermissionRequest, global::Aserto.Directory.Reader.V2.CheckPermissionResponse> __Method_CheckPermission = new grpc::Method<global::Aserto.Directory.Reader.V2.CheckPermissionRequest, global::Aserto.Directory.Reader.V2.CheckPermissionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckPermission",
        __Marshaller_aserto_directory_reader_v2_CheckPermissionRequest,
        __Marshaller_aserto_directory_reader_v2_CheckPermissionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.CheckRelationRequest, global::Aserto.Directory.Reader.V2.CheckRelationResponse> __Method_CheckRelation = new grpc::Method<global::Aserto.Directory.Reader.V2.CheckRelationRequest, global::Aserto.Directory.Reader.V2.CheckRelationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckRelation",
        __Marshaller_aserto_directory_reader_v2_CheckRelationRequest,
        __Marshaller_aserto_directory_reader_v2_CheckRelationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aserto.Directory.Reader.V2.GetGraphRequest, global::Aserto.Directory.Reader.V2.GetGraphResponse> __Method_GetGraph = new grpc::Method<global::Aserto.Directory.Reader.V2.GetGraphRequest, global::Aserto.Directory.Reader.V2.GetGraphResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGraph",
        __Marshaller_aserto_directory_reader_v2_GetGraphRequest,
        __Marshaller_aserto_directory_reader_v2_GetGraphResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Aserto.Directory.Reader.V2.ReaderReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Reader</summary>
    [grpc::BindServiceMethod(typeof(Reader), "BindService")]
    public abstract partial class ReaderBase
    {
      /// <summary>
      /// object type metadata methods
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetObjectTypeResponse> GetObjectType(global::Aserto.Directory.Reader.V2.GetObjectTypeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetObjectTypesResponse> GetObjectTypes(global::Aserto.Directory.Reader.V2.GetObjectTypesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// relation type metadata methods
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetRelationTypeResponse> GetRelationType(global::Aserto.Directory.Reader.V2.GetRelationTypeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetRelationTypesResponse> GetRelationTypes(global::Aserto.Directory.Reader.V2.GetRelationTypesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// permission metadata methods
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetPermissionResponse> GetPermission(global::Aserto.Directory.Reader.V2.GetPermissionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetPermissionsResponse> GetPermissions(global::Aserto.Directory.Reader.V2.GetPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// object methods
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetObjectResponse> GetObject(global::Aserto.Directory.Reader.V2.GetObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetObjectManyResponse> GetObjectMany(global::Aserto.Directory.Reader.V2.GetObjectManyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetObjectsResponse> GetObjects(global::Aserto.Directory.Reader.V2.GetObjectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// relation methods
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetRelationResponse> GetRelation(global::Aserto.Directory.Reader.V2.GetRelationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetRelationsResponse> GetRelations(global::Aserto.Directory.Reader.V2.GetRelationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// check permission method
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.CheckPermissionResponse> CheckPermission(global::Aserto.Directory.Reader.V2.CheckPermissionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// check relation method
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.CheckRelationResponse> CheckRelation(global::Aserto.Directory.Reader.V2.CheckRelationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// graph methods
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aserto.Directory.Reader.V2.GetGraphResponse> GetGraph(global::Aserto.Directory.Reader.V2.GetGraphRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Reader</summary>
    public partial class ReaderClient : grpc::ClientBase<ReaderClient>
    {
      /// <summary>Creates a new client for Reader</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ReaderClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Reader that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ReaderClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ReaderClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ReaderClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// object type metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetObjectTypeResponse GetObjectType(global::Aserto.Directory.Reader.V2.GetObjectTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// object type metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetObjectTypeResponse GetObjectType(global::Aserto.Directory.Reader.V2.GetObjectTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetObjectType, null, options, request);
      }
      /// <summary>
      /// object type metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetObjectTypeResponse> GetObjectTypeAsync(global::Aserto.Directory.Reader.V2.GetObjectTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// object type metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetObjectTypeResponse> GetObjectTypeAsync(global::Aserto.Directory.Reader.V2.GetObjectTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetObjectType, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetObjectTypesResponse GetObjectTypes(global::Aserto.Directory.Reader.V2.GetObjectTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetObjectTypesResponse GetObjectTypes(global::Aserto.Directory.Reader.V2.GetObjectTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetObjectTypes, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetObjectTypesResponse> GetObjectTypesAsync(global::Aserto.Directory.Reader.V2.GetObjectTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectTypesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetObjectTypesResponse> GetObjectTypesAsync(global::Aserto.Directory.Reader.V2.GetObjectTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetObjectTypes, null, options, request);
      }
      /// <summary>
      /// relation type metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetRelationTypeResponse GetRelationType(global::Aserto.Directory.Reader.V2.GetRelationTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRelationType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// relation type metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetRelationTypeResponse GetRelationType(global::Aserto.Directory.Reader.V2.GetRelationTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRelationType, null, options, request);
      }
      /// <summary>
      /// relation type metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetRelationTypeResponse> GetRelationTypeAsync(global::Aserto.Directory.Reader.V2.GetRelationTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRelationTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// relation type metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetRelationTypeResponse> GetRelationTypeAsync(global::Aserto.Directory.Reader.V2.GetRelationTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRelationType, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetRelationTypesResponse GetRelationTypes(global::Aserto.Directory.Reader.V2.GetRelationTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRelationTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetRelationTypesResponse GetRelationTypes(global::Aserto.Directory.Reader.V2.GetRelationTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRelationTypes, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetRelationTypesResponse> GetRelationTypesAsync(global::Aserto.Directory.Reader.V2.GetRelationTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRelationTypesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetRelationTypesResponse> GetRelationTypesAsync(global::Aserto.Directory.Reader.V2.GetRelationTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRelationTypes, null, options, request);
      }
      /// <summary>
      /// permission metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetPermissionResponse GetPermission(global::Aserto.Directory.Reader.V2.GetPermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPermission(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// permission metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetPermissionResponse GetPermission(global::Aserto.Directory.Reader.V2.GetPermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPermission, null, options, request);
      }
      /// <summary>
      /// permission metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetPermissionResponse> GetPermissionAsync(global::Aserto.Directory.Reader.V2.GetPermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPermissionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// permission metadata methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetPermissionResponse> GetPermissionAsync(global::Aserto.Directory.Reader.V2.GetPermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPermission, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetPermissionsResponse GetPermissions(global::Aserto.Directory.Reader.V2.GetPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetPermissionsResponse GetPermissions(global::Aserto.Directory.Reader.V2.GetPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPermissions, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetPermissionsResponse> GetPermissionsAsync(global::Aserto.Directory.Reader.V2.GetPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetPermissionsResponse> GetPermissionsAsync(global::Aserto.Directory.Reader.V2.GetPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPermissions, null, options, request);
      }
      /// <summary>
      /// object methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetObjectResponse GetObject(global::Aserto.Directory.Reader.V2.GetObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// object methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetObjectResponse GetObject(global::Aserto.Directory.Reader.V2.GetObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetObject, null, options, request);
      }
      /// <summary>
      /// object methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetObjectResponse> GetObjectAsync(global::Aserto.Directory.Reader.V2.GetObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// object methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetObjectResponse> GetObjectAsync(global::Aserto.Directory.Reader.V2.GetObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetObject, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetObjectManyResponse GetObjectMany(global::Aserto.Directory.Reader.V2.GetObjectManyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectMany(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetObjectManyResponse GetObjectMany(global::Aserto.Directory.Reader.V2.GetObjectManyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetObjectMany, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetObjectManyResponse> GetObjectManyAsync(global::Aserto.Directory.Reader.V2.GetObjectManyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectManyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetObjectManyResponse> GetObjectManyAsync(global::Aserto.Directory.Reader.V2.GetObjectManyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetObjectMany, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetObjectsResponse GetObjects(global::Aserto.Directory.Reader.V2.GetObjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetObjectsResponse GetObjects(global::Aserto.Directory.Reader.V2.GetObjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetObjects, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetObjectsResponse> GetObjectsAsync(global::Aserto.Directory.Reader.V2.GetObjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetObjectsResponse> GetObjectsAsync(global::Aserto.Directory.Reader.V2.GetObjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetObjects, null, options, request);
      }
      /// <summary>
      /// relation methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetRelationResponse GetRelation(global::Aserto.Directory.Reader.V2.GetRelationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRelation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// relation methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetRelationResponse GetRelation(global::Aserto.Directory.Reader.V2.GetRelationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRelation, null, options, request);
      }
      /// <summary>
      /// relation methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetRelationResponse> GetRelationAsync(global::Aserto.Directory.Reader.V2.GetRelationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRelationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// relation methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetRelationResponse> GetRelationAsync(global::Aserto.Directory.Reader.V2.GetRelationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRelation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetRelationsResponse GetRelations(global::Aserto.Directory.Reader.V2.GetRelationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRelations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetRelationsResponse GetRelations(global::Aserto.Directory.Reader.V2.GetRelationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRelations, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetRelationsResponse> GetRelationsAsync(global::Aserto.Directory.Reader.V2.GetRelationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRelationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetRelationsResponse> GetRelationsAsync(global::Aserto.Directory.Reader.V2.GetRelationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRelations, null, options, request);
      }
      /// <summary>
      /// check permission method
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.CheckPermissionResponse CheckPermission(global::Aserto.Directory.Reader.V2.CheckPermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckPermission(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// check permission method
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.CheckPermissionResponse CheckPermission(global::Aserto.Directory.Reader.V2.CheckPermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckPermission, null, options, request);
      }
      /// <summary>
      /// check permission method
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.CheckPermissionResponse> CheckPermissionAsync(global::Aserto.Directory.Reader.V2.CheckPermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckPermissionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// check permission method
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.CheckPermissionResponse> CheckPermissionAsync(global::Aserto.Directory.Reader.V2.CheckPermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckPermission, null, options, request);
      }
      /// <summary>
      /// check relation method
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.CheckRelationResponse CheckRelation(global::Aserto.Directory.Reader.V2.CheckRelationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckRelation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// check relation method
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.CheckRelationResponse CheckRelation(global::Aserto.Directory.Reader.V2.CheckRelationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckRelation, null, options, request);
      }
      /// <summary>
      /// check relation method
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.CheckRelationResponse> CheckRelationAsync(global::Aserto.Directory.Reader.V2.CheckRelationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckRelationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// check relation method
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.CheckRelationResponse> CheckRelationAsync(global::Aserto.Directory.Reader.V2.CheckRelationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckRelation, null, options, request);
      }
      /// <summary>
      /// graph methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetGraphResponse GetGraph(global::Aserto.Directory.Reader.V2.GetGraphRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGraph(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// graph methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aserto.Directory.Reader.V2.GetGraphResponse GetGraph(global::Aserto.Directory.Reader.V2.GetGraphRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGraph, null, options, request);
      }
      /// <summary>
      /// graph methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetGraphResponse> GetGraphAsync(global::Aserto.Directory.Reader.V2.GetGraphRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGraphAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// graph methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aserto.Directory.Reader.V2.GetGraphResponse> GetGraphAsync(global::Aserto.Directory.Reader.V2.GetGraphRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGraph, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ReaderClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ReaderClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ReaderBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetObjectType, serviceImpl.GetObjectType)
          .AddMethod(__Method_GetObjectTypes, serviceImpl.GetObjectTypes)
          .AddMethod(__Method_GetRelationType, serviceImpl.GetRelationType)
          .AddMethod(__Method_GetRelationTypes, serviceImpl.GetRelationTypes)
          .AddMethod(__Method_GetPermission, serviceImpl.GetPermission)
          .AddMethod(__Method_GetPermissions, serviceImpl.GetPermissions)
          .AddMethod(__Method_GetObject, serviceImpl.GetObject)
          .AddMethod(__Method_GetObjectMany, serviceImpl.GetObjectMany)
          .AddMethod(__Method_GetObjects, serviceImpl.GetObjects)
          .AddMethod(__Method_GetRelation, serviceImpl.GetRelation)
          .AddMethod(__Method_GetRelations, serviceImpl.GetRelations)
          .AddMethod(__Method_CheckPermission, serviceImpl.CheckPermission)
          .AddMethod(__Method_CheckRelation, serviceImpl.CheckRelation)
          .AddMethod(__Method_GetGraph, serviceImpl.GetGraph).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ReaderBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetObjectType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetObjectTypeRequest, global::Aserto.Directory.Reader.V2.GetObjectTypeResponse>(serviceImpl.GetObjectType));
      serviceBinder.AddMethod(__Method_GetObjectTypes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetObjectTypesRequest, global::Aserto.Directory.Reader.V2.GetObjectTypesResponse>(serviceImpl.GetObjectTypes));
      serviceBinder.AddMethod(__Method_GetRelationType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetRelationTypeRequest, global::Aserto.Directory.Reader.V2.GetRelationTypeResponse>(serviceImpl.GetRelationType));
      serviceBinder.AddMethod(__Method_GetRelationTypes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetRelationTypesRequest, global::Aserto.Directory.Reader.V2.GetRelationTypesResponse>(serviceImpl.GetRelationTypes));
      serviceBinder.AddMethod(__Method_GetPermission, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetPermissionRequest, global::Aserto.Directory.Reader.V2.GetPermissionResponse>(serviceImpl.GetPermission));
      serviceBinder.AddMethod(__Method_GetPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetPermissionsRequest, global::Aserto.Directory.Reader.V2.GetPermissionsResponse>(serviceImpl.GetPermissions));
      serviceBinder.AddMethod(__Method_GetObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetObjectRequest, global::Aserto.Directory.Reader.V2.GetObjectResponse>(serviceImpl.GetObject));
      serviceBinder.AddMethod(__Method_GetObjectMany, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetObjectManyRequest, global::Aserto.Directory.Reader.V2.GetObjectManyResponse>(serviceImpl.GetObjectMany));
      serviceBinder.AddMethod(__Method_GetObjects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetObjectsRequest, global::Aserto.Directory.Reader.V2.GetObjectsResponse>(serviceImpl.GetObjects));
      serviceBinder.AddMethod(__Method_GetRelation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetRelationRequest, global::Aserto.Directory.Reader.V2.GetRelationResponse>(serviceImpl.GetRelation));
      serviceBinder.AddMethod(__Method_GetRelations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetRelationsRequest, global::Aserto.Directory.Reader.V2.GetRelationsResponse>(serviceImpl.GetRelations));
      serviceBinder.AddMethod(__Method_CheckPermission, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.CheckPermissionRequest, global::Aserto.Directory.Reader.V2.CheckPermissionResponse>(serviceImpl.CheckPermission));
      serviceBinder.AddMethod(__Method_CheckRelation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.CheckRelationRequest, global::Aserto.Directory.Reader.V2.CheckRelationResponse>(serviceImpl.CheckRelation));
      serviceBinder.AddMethod(__Method_GetGraph, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aserto.Directory.Reader.V2.GetGraphRequest, global::Aserto.Directory.Reader.V2.GetGraphResponse>(serviceImpl.GetGraph));
    }

  }
}
#endregion
